on:
  push:
    branches:
      - main
  pull_request:
    types:
      - synchronize

permissions:
  contents: write

name: Build and Release

jobs:
  update_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: '检查 package.json'
        run: cat ./package.json

      - name: 'Automated Version Bump'
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          tag-prefix: 'v'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: '检查 package.json'
        run: cat ./package.json
        
      - name: 输出新的版本号
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: |
          echo "新版本号 $NEW_TAG"
          echo "action_state=$NEW_TAG" >> $GITHUB_ENV

  test:
    runs-on: ubuntu-latest
    needs: 
      - update_version
    steps:
      - name: 检查tag-1
        run: echo ${{ env.tag }}
      - name: 检查tag-2
        env: 
          TAG: ${{ env.tag }}
        run: echo $NEW_TAG
      - name: 检查tag-3
        with: 
          TAG: ${{ env.tag }}
        run: echo $NEW_TAG

  build:
    runs-on: ${{ matrix.os }}   
    needs: update_version
    strategy:      
      matrix:        
        os: [ubuntu-latest,macos-latest,windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Install node-gyp
        run: npm install node-gyp@latest -g

      - name: Rebuild
        run: npm run rebuild

      - name: Build Release Files
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 检查文件(macOS、Ubuntu)
        if: matrix.os != 'windows-latest'
        run: |
          ls -alh release

      - name: 检查文件(Windows)
        if: matrix.os == 'windows-latest'
        run: |
          dir release

      - name: 上传构件
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: |
            release/*.exe 
            release/*.dmg
            release/*.AppImage
            release/*.snap
          retention-days: 5

  release:
    runs-on: ubuntu-latest
    needs: 
      - build
      - update_version
    steps:
      - name: 下载构件
        uses: actions/download-artifact@v3

      - name: 检查文件
        run: ls -alhR

      - name: 发布版本
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag }}
          files: |
            ./**/*.dmg
            ./**/*.exe
            ./**/*.AppImage
            ./**/*.snap

  sync:
    runs-on: self-hosted
    needs: build
    steps:
      - name: 准备文件夹
        run: |
          rm -rf downloads && mkdir downloads
          rm -rf /www/storage/kuaiyizhi_desktop_temp/
          mkdir /www/storage/kuaiyizhi_desktop_temp/

      - name: 下载构件
        uses: actions/download-artifact@v3
        with:
          path: downloads

      - name: 检查文件
        run: ls -alhR downloads

      - name: 扁平化
        run: |
          find downloads -type f -exec cp {} /www/storage/kuaiyizhi_desktop_temp/ \;

      - name: 检查文件
        run: ls -alhR /www/storage/kuaiyizhi_desktop_temp

      - name: 同步到服务器
        run: |
          rm -rf /www/storage/kuaiyizhi_desktop
          mv /www/storage/kuaiyizhi_desktop_temp /www/storage/kuaiyizhi_desktop
            