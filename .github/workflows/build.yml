on:
  push:
    tags:
      - 'v*' 

permissions:
  contents: write

name: Upload Release Asset

jobs:
  build:
    runs-on: ${{ matrix.os }}   
    strategy:      
      matrix:        
        os: [ubuntu-latest,macos-latest,windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Install node-gyp
        run: npm install node-gyp@latest -g

      - name: Rebuild
        run: npm run rebuild

      - name: Build Release Files
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 检查文件(macOS、Ubuntu)
        if: matrix.os != 'windows-latest'
        run: |
          ls -alh release

      - name: 检查文件(Windows)
        if: matrix.os == 'windows-latest'
        run: |
          dir release

      - name: 压缩文件
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          path: 'release'
          filename: 'release.zip'
          exclusions: '
            release/linux-unpacked
            release/win-unpacked
            release/mac
            release/linux-unpacked/*
            release/win-unpacked/*
            release/mac/*
            linux-unpacked
            win-unpacked
            mac
            linux-unpacked/*
            win-unpacked/*
            mac/*
            *.icon-ico
            *.icon-set
            *.app
            *.yml 
            *.blockmap
            '

      - name: 检查文件(macOS、Ubuntu)
        if: matrix.os != 'windows-latest'
        run: |
          ls -alh 

      - name: 检查文件(Windows)
        if: matrix.os == 'windows-latest'
        run: |
          dir

      - name: 上传构件
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: release.zip
          retention-days: 5

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 下载构件
        uses: actions/download-artifact@v3
      - name: 检查文件
        run: ls -alhR
      - name: 解压文件
        run: |
          find . -type f -name "*.zip" -exec unzip {} -d unzipped \;
      - name: 检查文件
        run: |
          ls -alh
          ls -alh unzipped
          ls -alh unzipped/release
      - name: 发布版本
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            unzipped/**/*.dmg
            unzipped/**/*.exe
            unzipped/**/*.AppImage
            unzipped/**/*.snap

  sync:
    runs-on: self-hosted
    needs: build
    steps:
      - name: 下载构件
        uses: actions/download-artifact@v3
        with:
          path: .
      - name: 检查文件
        run: |
          ls -alhR
      - name: 解压文件
        run: |
          find . -type f -name "*.zip" -exec unzip {} -d unzipped \;
      - name: 检查文件
        run: |
          ls -alh
          ls -alh unzipped
          ls -alh unzipped/release
      - name: 同步到服务器
        run: |
          find unzipped -type f -exec cp {} /www/storage/kuaiyizhi_desktop_temp/
          rm -rf /www/storage/kuaiyizhi_desktop
          mv /www/storage/kuaiyizhi_desktop_temp /www/storage/kuaiyizhi_desktop
            