cache:
  paths:
    - node_modules/

before_script:
  - whoami
  - hostname

stages:
  - build
  - sync

# build_win:
#   stage: build
#   image: electronuserland/builder:wine
#   only:
#     - main
#   artifacts:
#     paths:
#       - release
#     expire_in: 30 mins
#   script: |
#     npm install node-gyp@latest -g
#     npm i
#     npm run rebuild 
#     npm run build:win

build_linux:
  stage: build
  image: electronuserland/builder:latest
  only:
    - main
  artifacts:
    paths:
      - release
    expire_in: 30 mins
  script:
    - npm install -g npm@8.15.0
    - npm install node-gyp@latest -g
    - npm -v
    - npm ci
    - npm run rebuild 
    - npm run build

# build_mac:
#   stage: build
#   only:
#     - main
#   tags:
#     - tencent
#   artifacts:
#     paths:
#       - release
#     expire_in: 30 mins
#   script: |
#     # Pull the macOS Docker image
#     docker pull electronuserland/builder:latest-mac

#     # Run the macOS Docker container
#     docker run -it -v "$(pwd):/project" electronuserland/builder:latest-mac /bin/bash -c "
#       # Install dependencies (if needed)
#       # ...

#       # Build Electron App
#       npm install
#       npm run build-macos
#     "

sync:
  stage: sync
  only:
    - main
  tags:
    - tencent
  script: rm -rf /www/database/lessons.db && cp -rf database/database.db /www/database/lessons.db